
# dusthillresident's home made sine approximation function

func fnsin(a)(
 set a * a 0.6366197723675814;
 local ia (- int a < a 0);
 set a - a ia;
 if (! & ia 1) (set a - 1 a)
 set a * a a;
 set a - 1 a;
 set a + (* a 0.774432) * a a 0.225568;
 if (& ia 2)(neg a)(a)
)

set pi 3.14159265358979323846264338327950288

# Demonstration: draw it in the terminal window using ansi escape codes and unicode drawing characters
# (For more information on this part, see 'ansi2.rubish' )

func ansiCursor(x y)(
 (print cat$  chr$ 0x1b "["  str$ int(+ 1 y) ";"  str$ int(+ 1 x) "H")
)

set ww 110
set hh 40
set pix  array ww hh;

set b  make-array " " "▘" "▝" "▀" "▖" "▌" "▞" "▛" "▗" "▚" "▐" "▜" "▄" "▙" "▟" "█";

func plot(x y)(
 local xx (& x 1) yy (& y 1);
 local v ( <<  (<< 1 xx)  (<< yy 1) );
 set x % >> x 1 ww;
 set y % >> y 1 hh;
 if ! = pix[x y] 15 (
  set pix[x y]  | pix[x y] v;
  ansiCursor (+ 1 x) (+ y 1);
  print b[ pix[x y] ];
 )
)

set message "Here's more stupid bullshit nobody cares about. i can write whatever here and nobody will ever see it. Suck my balls.  "

set offset 0.0

print cat$ chr$ 0x1b "[?25l";

while 1 (
 # Clear screen
 print cat$ chr$ 0x1b "[2J";
 set pix array ww hh;

 # Plot sine wave
 for (x 0 ww) (
  set y + (/ hh 2) * 0.8 (/ hh 2) fnsin( + (* offset pi 2) * pi 2 / x ww );
  plot x y
  if (& 1 x) (ansiCursor (+ 1 / x 2) (+ -1.5 / y 2); print (range$ message % (+ (* offset length message) >> x 1) (length message)))
 )

 print ;

 set offset fract + offset 0.011139895789793758;
 wait 44;
)
